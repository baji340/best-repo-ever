public class TriggerOnJobHandler {
    
    //Method to update Job Number on Job which is treated as Auto Number
    public static void updateJobNumberOnJob(list<Task> listOfJobs){
        
        //Fetch record types for the Custom Object - 'Job__c'
        map<Id,String> mapOfRecordTypeIdVsName = new map<Id,String>();
        list<RecordType> recordTypeList = [Select Id, Name from RecordType where sObjectType = 'Task'];
        if(recordTypeList != null && !recordTypeList.isEmpty()){
            for(RecordType rec : recordTypeList){
                mapOfRecordTypeIdVsName.put(rec.Id,rec.Name);
            } 
        }
        
        //Fetch the Job Number of the last created Job
        list<Task> jobList = new list<Task>();
        jobList = [SELECT Job_Number__c FROM Task Order by CreatedDate  desc limit 1];
        system.debug('jobList*****'+jobList);
        decimal autoNumber;
        
        if(jobList != null && !jobList.isEmpty() && jobList[0].Job_Number__c != null && jobList[0].Job_Number__c != ''){
            String autoNumberString = jobList[0].Job_Number__c.substringBetween('{','}');
            autoNumberString = autoNumberString.trim();
            autoNumber = Decimal.valueOf(autoNumberString);
        }else{
            autoNumber = 000000;
        }
        
        //Update Job Number
        for(Task job : listOfJobs){
            String recordtype = null;
            if(mapOfRecordTypeIdVsName != null && job.RecordTypeId != null && mapOfRecordTypeIdVsName.containsKey(job.RecordTypeId)){
                recordtype = mapOfRecordTypeIdVsName.get(job.RecordTypeId).left(1);
                
            }
            
            if(recordtype != null && recordtype != '' && autoNumber != null){
                String autogenerated = String.valueOf(Integer.valueOf(autoNumber) + 1);
                autogenerated = autogenerated.leftPad(6,'0');
                job.Job_Number__c = 'T'+'-'+autogenerated;
            }
            autoNumber++;
            
        } 
        
    }
}